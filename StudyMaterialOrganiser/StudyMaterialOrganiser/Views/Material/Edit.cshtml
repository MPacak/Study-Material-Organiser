@model StudyMaterialOrganiser.ViewModels.MaterialVM

@{
    ViewData["Title"] = "Edit Material";
}

<h1>Edit Material</h1>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Link" />
            <input type="hidden" asp-for="FilePath" />

            <div class="form-group mb-3">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label class="control-label">Current File</label>
                <p>@(string.IsNullOrEmpty(Model.FilePath) ? "No file uploaded" : Model.FilePath)</p>
            </div>

            <div class="form-group mb-3">
                <label asp-for="File" class="control-label">Upload New File (Optional)</label>
                <input asp-for="File" class="form-control" type="file" />
                <span asp-validation-for="File" class="text-danger"></span>
                <small class="form-text text-muted">Leave empty to keep the existing file</small>
            </div>

            <div class="form-group mb-3">
                <label class="control-label">Tags</label>
                <div>
                    @foreach (var tag in Model.AvailableTags)
                    {
                        <div class="form-check form-check-inline">
                            <input class="form-check-input"
                                   type="checkbox"
                                   name="SelectedTagIds"
                                   value="@tag.Id"
                            @(Model.SelectedTagIds?.Contains(tag.Id) == true ? "checked" : "") />
                            <label class="form-check-label">@tag.Name</label>
                        </div>
                    }
                </div>
            </div>

            <div class="form-group mb-3">
                <label class="control-label">Shareable Link</label>
                <input type="text" class="form-control" value="@Model.Link" readonly />
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Save Changes</button>
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}